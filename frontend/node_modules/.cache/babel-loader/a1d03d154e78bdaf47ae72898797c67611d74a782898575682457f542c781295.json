{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport img_default from '@/assets/account_default.svg';\nexport default {\n  name: 'RegisterView',\n  data() {\n    return {\n      img_default,\n      img: null,\n      nickname: '',\n      valid: true,\n      lengthValid: true,\n      useValid: true\n    };\n  },\n  methods: {\n    // 프로필 사진\n    upload(event) {\n      let file = event.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n      reader.onload = event => {\n        // console.log(event.target.result)\n        this.img = event.target.result;\n        console.log(this.img);\n      };\n      // DB업로드 코드 추가하기\n    },\n\n    // 닉네임 유효성 검사\n    check() {\n      if (this.nickname.length > 6) {\n        this.lengthValid = false;\n      } else {\n        this.lengthValid = true;\n      }\n      // 중복체크 코드로 바꾸기\n      if (this.nickname.length < 3) {\n        this.useValid = false;\n      } else {\n        this.useValid = true;\n      }\n    },\n    async onSave() {\n      if (this.lengthValid && this.useValid) {\n        alert(\"가입하기\");\n        const nick = this.nickname;\n        // const email = new URL(window.location.href).searchParams.get('email');\n        const email = this.$route.params.email;\n        var token = await axios.post(\"http://3.34.138.191:9997/kakao/register\", {\n          \"nick\": nick,\n          \"email\": email\n        });\n        console.log(\"회원가입 완료\", token.data);\n        // token에 토큰이 담겨있어요 쎄션스토리지에 넣어서 사용해하세요\n        sessionStorage.setItem(\"token\", token.data);\n        //이곳에 회원가입이 완료하고 돌아갈 곳을 달아주세요\n        this.$router.push({\n          name: 'Home'\n        });\n      } else {\n        alert('닉네임을 바르게 설정하세요.');\n      }\n    }\n  },\n  watch: {\n    'nickname': 'check'\n  }\n};","map":{"version":3,"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,WAAU,MAAO,8BAA6B;AAErD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAI,GAAG;IACL,OAAO;MACLF,WAAW;MACXG,GAAG,EAAE,IAAI;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE;IAEZ;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,MAAM,CAACC,KAAK,EAAE;MACZ,IAAIC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAI;MAC5B,IAAIC,MAAK,GAAI,IAAIC,UAAU,EAAC;MAE5BD,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC,CAAC,CAAC;MAC5BG,MAAM,CAACG,MAAK,GAAIP,KAAI,IAAK;QACvB;QACA,IAAI,CAACP,GAAE,GAAIO,KAAK,CAACE,MAAM,CAACM,MAAK;QAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,GAAG;MACtB;MACA;IACF,CAAC;;IACD;IACAkB,KAAK,GAAG;MACN,IAAG,IAAI,CAACjB,QAAQ,CAACkB,MAAK,GAAI,CAAC,EAAE;QAC3B,IAAI,CAAChB,WAAU,GAAI,KAAI;MACzB,OAAO;QACL,IAAI,CAACA,WAAU,GAAI,IAAG;MACxB;MACA;MACA,IAAG,IAAI,CAACF,QAAQ,CAACkB,MAAK,GAAI,CAAC,EAAC;QAC1B,IAAI,CAACf,QAAO,GAAI,KAAI;MACtB,OAAO;QACL,IAAI,CAACA,QAAO,GAAI,IAAG;MACrB;IACF,CAAC;IACD,MAAMgB,MAAM,GAAG;MACb,IAAG,IAAI,CAACjB,WAAU,IAAK,IAAI,CAACC,QAAQ,EAAE;QACpCiB,KAAK,CAAC,MAAM,CAAC;QACb,MAAMC,IAAG,GAAI,IAAI,CAACrB,QAAO;QACzB;QACA,MAAMsB,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,KAAI;QACrC,IAAIG,KAAI,GAAI,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,yCAAyC,EAAE;UAAC,MAAM,EAAEL,IAAI;UAAE,OAAO,EAAEC;QAAK,CAAC,CAAC;QACvGP,OAAO,CAACC,GAAG,CAAC,SAAS,EAAES,KAAK,CAAC3B,IAAI,CAAC;QAClC;QACA6B,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC3B,IAAI,CAAC;QAC3C;QACA,IAAI,CAAC+B,OAAO,CAACC,IAAI,CAAC;UAAEjC,IAAI,EAAE;QAAO,CAAC;MACpC,OAAO;QACLuB,KAAK,CAAC,iBAAiB;MACzB;IACF;EACF,CAAC;EACDW,KAAK,EAAE;IACL,UAAU,EAAE;EACd;AAEF","names":["axios","img_default","name","data","img","nickname","valid","lengthValid","useValid","methods","upload","event","file","target","files","reader","FileReader","readAsDataURL","onload","result","console","log","check","length","onSave","alert","nick","email","$route","params","token","post","sessionStorage","setItem","$router","push","watch"],"sourceRoot":"","sources":["C:\\Users\\SSAFY\\Desktop\\git archive\\S08P12D208\\frontend\\src\\views\\accounts\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"profile\">   \r\n      <label for=\"file\">\r\n        <!-- <img src=\"@/assets/profile_frame.png\" alt=\"profileFrame\"> -->\r\n        <!-- <img src=\"@/assets/camera.svg\" alt=\"upload pic\"> -->\r\n        <img :src=\"img ? img : img_default\" alt=\"profilePic\" class=\"uploadedImg\">\r\n        <input type=\"file\" id=\"file\" class=\"inputfile\" @change=\"upload\">\r\n      </label>\r\n\r\n    </div>\r\n\r\n    <div>\r\n      <label for=\"nickname_input\">닉네임</label>\r\n      <input type=\"text\" id=\"nickname_input\" v-model=\"nickname\" maxlength=\"6\">\r\n\r\n      <div class=\"check\" v-if=\"nickname.length>0\">\r\n        <div v-if=\"!lengthValid || !useValid\">\r\n          <p v-if=\"!lengthValid\">닉네임은 최대 6글자까지 가능합니다.</p>\r\n          <p v-if=\"!useValid\">이미 사용 중인 닉네임입니다.</p>\r\n        </div>\r\n        <div v-else>\r\n          <p style=\"color:green;\">사용 가능한 닉네임입니다.</p>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <br>\r\n      </div>\r\n      <div class=\"container\" @click=\"onSave\">\r\n        <p>저장</p>\r\n        <img alt=\"Vue logo\" src=\"@/assets/button_back1.svg\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport img_default from '@/assets/account_default.svg'\r\n\r\nexport default {\r\n  name: 'RegisterView',\r\n  data() {\r\n    return {\r\n      img_default,\r\n      img: null,\r\n      nickname: '',\r\n      valid: true,\r\n      lengthValid: true,\r\n      useValid: true,\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    // 프로필 사진\r\n    upload(event) {\r\n      let file = event.target.files\r\n      let reader = new FileReader()\r\n\r\n      reader.readAsDataURL(file[0])\r\n      reader.onload = event => {\r\n        // console.log(event.target.result)\r\n        this.img = event.target.result\r\n        console.log(this.img)\r\n      }\r\n      // DB업로드 코드 추가하기\r\n    },\r\n    // 닉네임 유효성 검사\r\n    check() {\r\n      if(this.nickname.length > 6) {\r\n        this.lengthValid = false\r\n      } else {\r\n        this.lengthValid = true\r\n      }\r\n      // 중복체크 코드로 바꾸기\r\n      if(this.nickname.length < 3){\r\n        this.useValid = false\r\n      } else {\r\n        this.useValid = true\r\n      }\r\n    },\r\n    async onSave() {\r\n      if(this.lengthValid && this.useValid) {\r\n        alert(\"가입하기\");\r\n        const nick = this.nickname\r\n        // const email = new URL(window.location.href).searchParams.get('email');\r\n        const email = this.$route.params.email\r\n        var token = await axios.post(\"http://3.34.138.191:9997/kakao/register\", {\"nick\": nick, \"email\": email});\r\n        console.log(\"회원가입 완료\", token.data);\r\n        // token에 토큰이 담겨있어요 쎄션스토리지에 넣어서 사용해하세요\r\n        sessionStorage.setItem(\"token\", token.data);\r\n        //이곳에 회원가입이 완료하고 돌아갈 곳을 달아주세요\r\n        this.$router.push({ name: 'Home' })\r\n      } else {\r\n        alert('닉네임을 바르게 설정하세요.')\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    'nickname': 'check',\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.profile {\r\n  /* padding:50px 0px; */\r\n  /* position: relative; */\r\n}\r\n.profile .uploadedImg {\r\n  /* position: absolute; */\r\n  top: 0;\r\n  left: 40%;\r\n  height: 100px;\r\n  width: 100px;\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n  /* border: 2px solid #1D182C */\r\n}\r\n.inputfile {\r\n  width: 0;\r\n  height: 0%;\r\n  overflow: hidden;\r\n}\r\n/* .uploadBtn {\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: #1D182C;\r\n  border-radius: 100%;\r\n  vertical-align: middle;\r\n} */\r\n.check {\r\n  font-size: 11px;\r\n  color: red;\r\n}\r\n.container p {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-size: 24pt;\r\n  margin: 0;\r\n}\r\n.container img{\r\n  height: 80px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}